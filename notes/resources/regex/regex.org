#+TITLE: Regular Expressions
#+DATE: [2018-02-10 Sat 13:12]
#+AUTHOR: Damian Chrzanowski
#+EMAIL: pjdamian.chrzanowski@gmail.com
#+OPTIONS: H:2 toc:2
#+HTML_HEAD: <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../../assets/org.css"/>
#+HTML_HEAD: <link rel="icon" href="../../assets/favicon.ico">

[[file:../../index.org][Home Page]]

* Literal Characters
  - Literal characters get matched even inside of a string
  - Literal characters *are* case sensitive
  - ~a~ in the regex will simply match all the ~a~ letters
  - ~cat~ will match all the ~cat~ letters in the string
* Special characters (metacharacters)
** List of special characters
   - ~\~
   - ~^~ : match the first character
   - ~$~ : match the last character
   - ~.~ : match a single character, except line breaks
   - ~|~ : alteration, look for ~cat|dog~
   - ~?~ : make the preceding operator optional, ~colou?r~, matches "color" or "colour". Match zero times or once.
   - ~*~ : match zero or more times
   - ~+~ : match once or more times
   - ~(~ and ~)~ @ grouping
   - ~[~ : character class
   - ~{~ repetition operator eg. ~a{1,3}~ match 1 to 3 letters "a"
   - ~\b~ : word boundary. Eg. ~\bword\b~
** Escaping special characters
   - to match ~1+1=2~, regex is ~1\+1=2~
** Non-Printable characters
   - ~\t~ to match a tab
   - ~\r~ to match a carriage return
   - ~\n~ to match a line feed
   - ~\a~ to match a bell
   - ~\e~ to match a escape
   - ~\f~ to match a form feed
   - Note: windows uses ~\r\n~ to terminate lines, *nix uses ~\n~
   - ~\uFFFF~ or ~\x{FFFF}~ for Unicode characters
* Character classes or character sets
** Escaping metacharacters
   - In most regex flavours you only have to escape ~]~, ~\~, ~-~ and ~^~, inside ot the ~[]~ class
** Finding characters
   - ~gr[ae]y~ matches "gray" or "grey"
   - ~[0-9]~ matches a single digit from 0 to 9
   - ~[0-9a-fA-F]~ matches a single digit hex digit, case insensitive
   - ~0[xX][A-Fa-f0-9]+~ C style hex number
** Negating characters
   - ~[^0-9\n]~ matches any non digit or a line feed
** Classes subtraction
   - ~[a-z-[aeiuo]]~ match a non vowel character. Read as match all characters from a to z, but not any of the vowels.
** Classes intersection
   - ~[a-z&&[^aeiuo]]~ match a consonant. Read as match all characters but not any of the vowels
** Shorthand classes
   - ~\d\D~ digit and non-digit, same as ~[0-9]~
   - ~\w\W~ word and non-word, same as ~[A-Za-z0-9_]~, can be inconsistent, flavours differ this shorthand's functionality
   - ~\sS~ whitespace character and non-whitespace, same as ~[ \t\r\n\f]~, space, tab, carriage return, line feed and form feed
   - NOTE, that ~\s\d~ meand match a whitespace *followed* by a digit, where ~[\s\d]~ means match a *single* character that is a whitespace or a digit
* Anchors
* Examples
** Date match
   ~[01]\d[- /.][0-3]\d[- /.]\d\d~
** Email
   ~\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}\b~

   #+BEGIN_EXPORT html
   <script src="../../assets/jquery-3.3.1.min.js"></script>
   <script src="../../assets/notes.js"></script>
   #+END_EXPORT
